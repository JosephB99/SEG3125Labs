@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="container-fluid text-center">
    <img src="~/logo.png" />
</div>

<div class="container-fluid position-relative">
    <div class="card">
        <br/>
        <div class="container-fluid text-center">
            <form class="needs-validation" novalidate>

                <div class="form-row">
                    <div class="form-group col-md-3 mx-auto">
                        <label for="validationCustom01" class="font-weight-bold">Email</label>
                        <input type="text" class="form-control" id="validationCustom01" placeholder="Enter email" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-3 mx-auto">
                        <label for="validationCustom02" class="font-weight-bold">Password</label>
                        <input type="password" class="form-control" id="validationCustom02" placeholder="Password" required>
                        <button type="button" class="btn btn-link">Forgot password?</button>
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-3 mx-auto text-center">
                        <button class="btn btn-primary" type="submit">Login</button>
                    </div>
                </div>
            </form>
                <div class="form-row">
                    <div class="form-group col-md-3 mx-auto text-center">
                        <a class="btn btn-primary" href="/Registration">Sign up</a>
                    </div>
                </div>
        </div>
    </div>
</div>


<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function () {
        'use strict';
        window.addEventListener('load', function () {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function (form) {
                form.addEventListener('submit', function (event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>